//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestApplication.CertixWS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CertixWS.CertixServicesSoap")]
    public interface CertixServicesSoap {
        
        // CODEGEN: Generating message contract since the wrapper name (MetodoTest) of message MetodoTest does not match the default value (TestMethod)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MetodoTest", ReplyAction="*")]
        TestApplication.CertixWS.MetodoTest1 TestMethod(TestApplication.CertixWS.MetodoTest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MetodoTest", ReplyAction="*")]
        System.Threading.Tasks.Task<TestApplication.CertixWS.MetodoTest1> TestMethodAsync(TestApplication.CertixWS.MetodoTest request);
        
        // CODEGEN: Generating message contract since the wrapper name (AcquisisceCodice) of message AcquisisceCodice does not match the default value (UploadCode)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AcquisisceCodice", ReplyAction="*")]
        TestApplication.CertixWS.AcquisisceCodice1 UploadCode(TestApplication.CertixWS.AcquisisceCodice request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AcquisisceCodice", ReplyAction="*")]
        System.Threading.Tasks.Task<TestApplication.CertixWS.AcquisisceCodice1> UploadCodeAsync(TestApplication.CertixWS.AcquisisceCodice request);
        
        // CODEGEN: Generating message contract since the wrapper name (AcquisisceMisure) of message AcquisisceMisure does not match the default value (UploadMeasures)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AcquisisceMisure", ReplyAction="*")]
        TestApplication.CertixWS.AcquisisceMisure1 UploadMeasures(TestApplication.CertixWS.AcquisisceMisure request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AcquisisceMisure", ReplyAction="*")]
        System.Threading.Tasks.Task<TestApplication.CertixWS.AcquisisceMisure1> UploadMeasuresAsync(TestApplication.CertixWS.AcquisisceMisure request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MetodoTest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class MetodoTest {
        
        public MetodoTest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MetodoTestResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class MetodoTest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string MetodoTestResult;
        
        public MetodoTest1() {
        }
        
        public MetodoTest1(string MetodoTestResult) {
            this.MetodoTestResult = MetodoTestResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AcquisisceCodice", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AcquisisceCodice {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int IdLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Code;
        
        public AcquisisceCodice() {
        }
        
        public AcquisisceCodice(int IdLine, string Code) {
            this.IdLine = IdLine;
            this.Code = Code;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AcquisisceCodiceResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AcquisisceCodice1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string AcquisisceCodiceResult;
        
        public AcquisisceCodice1() {
        }
        
        public AcquisisceCodice1(string AcquisisceCodiceResult) {
            this.AcquisisceCodiceResult = AcquisisceCodiceResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AcquisisceMisure", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AcquisisceMisure {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int IdMeasure;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string JSON;
        
        public AcquisisceMisure() {
        }
        
        public AcquisisceMisure(int IdMeasure, string JSON) {
            this.IdMeasure = IdMeasure;
            this.JSON = JSON;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AcquisisceMisureResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AcquisisceMisure1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string AcquisisceMisureResult;
        
        public AcquisisceMisure1() {
        }
        
        public AcquisisceMisure1(string AcquisisceMisureResult) {
            this.AcquisisceMisureResult = AcquisisceMisureResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CertixServicesSoapChannel : TestApplication.CertixWS.CertixServicesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CertixServicesSoapClient : System.ServiceModel.ClientBase<TestApplication.CertixWS.CertixServicesSoap>, TestApplication.CertixWS.CertixServicesSoap {
        
        public CertixServicesSoapClient() {
        }
        
        public CertixServicesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CertixServicesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CertixServicesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CertixServicesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TestApplication.CertixWS.MetodoTest1 TestApplication.CertixWS.CertixServicesSoap.TestMethod(TestApplication.CertixWS.MetodoTest request) {
            return base.Channel.TestMethod(request);
        }
        
        public string TestMethod() {
            TestApplication.CertixWS.MetodoTest inValue = new TestApplication.CertixWS.MetodoTest();
            TestApplication.CertixWS.MetodoTest1 retVal = ((TestApplication.CertixWS.CertixServicesSoap)(this)).TestMethod(inValue);
            return retVal.MetodoTestResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TestApplication.CertixWS.MetodoTest1> TestApplication.CertixWS.CertixServicesSoap.TestMethodAsync(TestApplication.CertixWS.MetodoTest request) {
            return base.Channel.TestMethodAsync(request);
        }
        
        public System.Threading.Tasks.Task<TestApplication.CertixWS.MetodoTest1> TestMethodAsync() {
            TestApplication.CertixWS.MetodoTest inValue = new TestApplication.CertixWS.MetodoTest();
            return ((TestApplication.CertixWS.CertixServicesSoap)(this)).TestMethodAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TestApplication.CertixWS.AcquisisceCodice1 TestApplication.CertixWS.CertixServicesSoap.UploadCode(TestApplication.CertixWS.AcquisisceCodice request) {
            return base.Channel.UploadCode(request);
        }
        
        public string UploadCode(int IdLine, string Code) {
            TestApplication.CertixWS.AcquisisceCodice inValue = new TestApplication.CertixWS.AcquisisceCodice();
            inValue.IdLine = IdLine;
            inValue.Code = Code;
            TestApplication.CertixWS.AcquisisceCodice1 retVal = ((TestApplication.CertixWS.CertixServicesSoap)(this)).UploadCode(inValue);
            return retVal.AcquisisceCodiceResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TestApplication.CertixWS.AcquisisceCodice1> TestApplication.CertixWS.CertixServicesSoap.UploadCodeAsync(TestApplication.CertixWS.AcquisisceCodice request) {
            return base.Channel.UploadCodeAsync(request);
        }
        
        public System.Threading.Tasks.Task<TestApplication.CertixWS.AcquisisceCodice1> UploadCodeAsync(int IdLine, string Code) {
            TestApplication.CertixWS.AcquisisceCodice inValue = new TestApplication.CertixWS.AcquisisceCodice();
            inValue.IdLine = IdLine;
            inValue.Code = Code;
            return ((TestApplication.CertixWS.CertixServicesSoap)(this)).UploadCodeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TestApplication.CertixWS.AcquisisceMisure1 TestApplication.CertixWS.CertixServicesSoap.UploadMeasures(TestApplication.CertixWS.AcquisisceMisure request) {
            return base.Channel.UploadMeasures(request);
        }
        
        public string UploadMeasures(int IdMeasure, string JSON) {
            TestApplication.CertixWS.AcquisisceMisure inValue = new TestApplication.CertixWS.AcquisisceMisure();
            inValue.IdMeasure = IdMeasure;
            inValue.JSON = JSON;
            TestApplication.CertixWS.AcquisisceMisure1 retVal = ((TestApplication.CertixWS.CertixServicesSoap)(this)).UploadMeasures(inValue);
            return retVal.AcquisisceMisureResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TestApplication.CertixWS.AcquisisceMisure1> TestApplication.CertixWS.CertixServicesSoap.UploadMeasuresAsync(TestApplication.CertixWS.AcquisisceMisure request) {
            return base.Channel.UploadMeasuresAsync(request);
        }
        
        public System.Threading.Tasks.Task<TestApplication.CertixWS.AcquisisceMisure1> UploadMeasuresAsync(int IdMeasure, string JSON) {
            TestApplication.CertixWS.AcquisisceMisure inValue = new TestApplication.CertixWS.AcquisisceMisure();
            inValue.IdMeasure = IdMeasure;
            inValue.JSON = JSON;
            return ((TestApplication.CertixWS.CertixServicesSoap)(this)).UploadMeasuresAsync(inValue);
        }
    }
}
